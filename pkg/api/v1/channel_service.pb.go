// Code generated by protoc-gen-go. DO NOT EDIT.
// source: channel_service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// protoc -I=./proto/v1 --go_out=plugins=grpc:./pkg/api/v1 ./proto/v1/channel_service.proto
type UserChannel struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	URL                  string   `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=Key,proto3" json:"Key,omitempty"`
	Enabled              bool     `protobuf:"varint,4,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	UserID               int64    `protobuf:"varint,5,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ID                   int64    `protobuf:"varint,6,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserChannel) Reset()         { *m = UserChannel{} }
func (m *UserChannel) String() string { return proto.CompactTextString(m) }
func (*UserChannel) ProtoMessage()    {}
func (*UserChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03236d7303c4762, []int{0}
}

func (m *UserChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserChannel.Unmarshal(m, b)
}
func (m *UserChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserChannel.Marshal(b, m, deterministic)
}
func (m *UserChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserChannel.Merge(m, src)
}
func (m *UserChannel) XXX_Size() int {
	return xxx_messageInfo_UserChannel.Size(m)
}
func (m *UserChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_UserChannel.DiscardUnknown(m)
}

var xxx_messageInfo_UserChannel proto.InternalMessageInfo

func (m *UserChannel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserChannel) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *UserChannel) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *UserChannel) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *UserChannel) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *UserChannel) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type User struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03236d7303c4762, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type GetUserChannelRequest struct {
	StreamKey            string   `protobuf:"bytes,2,opt,name=StreamKey,proto3" json:"StreamKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserChannelRequest) Reset()         { *m = GetUserChannelRequest{} }
func (m *GetUserChannelRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserChannelRequest) ProtoMessage()    {}
func (*GetUserChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03236d7303c4762, []int{2}
}

func (m *GetUserChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserChannelRequest.Unmarshal(m, b)
}
func (m *GetUserChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserChannelRequest.Marshal(b, m, deterministic)
}
func (m *GetUserChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserChannelRequest.Merge(m, src)
}
func (m *GetUserChannelRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserChannelRequest.Size(m)
}
func (m *GetUserChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserChannelRequest proto.InternalMessageInfo

func (m *GetUserChannelRequest) GetStreamKey() string {
	if m != nil {
		return m.StreamKey
	}
	return ""
}

type GetUserChannelResponse struct {
	User                 *User          `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	StreamID             int64          `protobuf:"varint,2,opt,name=StreamID,proto3" json:"StreamID,omitempty"`
	Channels             []*UserChannel `protobuf:"bytes,3,rep,name=Channels,proto3" json:"Channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetUserChannelResponse) Reset()         { *m = GetUserChannelResponse{} }
func (m *GetUserChannelResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserChannelResponse) ProtoMessage()    {}
func (*GetUserChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e03236d7303c4762, []int{3}
}

func (m *GetUserChannelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserChannelResponse.Unmarshal(m, b)
}
func (m *GetUserChannelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserChannelResponse.Marshal(b, m, deterministic)
}
func (m *GetUserChannelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserChannelResponse.Merge(m, src)
}
func (m *GetUserChannelResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserChannelResponse.Size(m)
}
func (m *GetUserChannelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserChannelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserChannelResponse proto.InternalMessageInfo

func (m *GetUserChannelResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *GetUserChannelResponse) GetStreamID() int64 {
	if m != nil {
		return m.StreamID
	}
	return 0
}

func (m *GetUserChannelResponse) GetChannels() []*UserChannel {
	if m != nil {
		return m.Channels
	}
	return nil
}

func init() {
	proto.RegisterType((*UserChannel)(nil), "v1.UserChannel")
	proto.RegisterType((*User)(nil), "v1.User")
	proto.RegisterType((*GetUserChannelRequest)(nil), "v1.GetUserChannelRequest")
	proto.RegisterType((*GetUserChannelResponse)(nil), "v1.GetUserChannelResponse")
}

func init() { proto.RegisterFile("channel_service.proto", fileDescriptor_e03236d7303c4762) }

var fileDescriptor_e03236d7303c4762 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcf, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0xd9, 0x6c, 0xbf, 0xfd, 0xa6, 0x13, 0x50, 0x19, 0x68, 0x58, 0x43, 0x0f, 0x21, 0xa7,
	0x80, 0x10, 0x68, 0xc4, 0x9b, 0x37, 0x23, 0x25, 0x54, 0x3c, 0x6c, 0xe9, 0x59, 0xd2, 0x3a, 0xa0,
	0xd0, 0x26, 0x35, 0x1b, 0x03, 0x3d, 0x79, 0xf4, 0xdf, 0x96, 0xdd, 0x4d, 0x62, 0x91, 0xde, 0xe6,
	0x7d, 0xe6, 0xc7, 0x7b, 0xc9, 0xc2, 0x74, 0xfb, 0x56, 0x94, 0x25, 0xed, 0x5e, 0x14, 0xd5, 0xed,
	0xfb, 0x96, 0x92, 0x43, 0x5d, 0x35, 0x15, 0x3a, 0xed, 0x3c, 0xfa, 0x66, 0xe0, 0xad, 0x15, 0xd5,
	0x0f, 0x76, 0x02, 0x11, 0x46, 0xcf, 0xc5, 0x9e, 0x04, 0x0b, 0x59, 0x3c, 0x91, 0xa6, 0xc6, 0x2b,
	0xe0, 0x6b, 0xf9, 0x24, 0x1c, 0x83, 0x74, 0xa9, 0xc9, 0x92, 0x8e, 0x82, 0x5b, 0xb2, 0xa4, 0x23,
	0x0a, 0xf8, 0xff, 0x58, 0x16, 0x9b, 0x1d, 0xbd, 0x8a, 0x51, 0xc8, 0x62, 0x57, 0xf6, 0x12, 0x7d,
	0x18, 0x6b, 0x83, 0x3c, 0x13, 0xff, 0x42, 0x16, 0x73, 0xd9, 0x29, 0xbc, 0x00, 0x27, 0xcf, 0xc4,
	0xd8, 0x30, 0x27, 0xcf, 0x22, 0x1f, 0x46, 0xba, 0xd3, 0x71, 0x36, 0xf0, 0x3b, 0x98, 0x2e, 0xa8,
	0x39, 0xc9, 0x28, 0xe9, 0xe3, 0x93, 0x54, 0x83, 0x33, 0x98, 0xac, 0x9a, 0x9a, 0x8a, 0xbd, 0x8e,
	0x62, 0xc3, 0xfd, 0x82, 0xe8, 0x0b, 0xfc, 0xbf, 0x6b, 0xea, 0x50, 0x95, 0x8a, 0x70, 0x66, 0x8d,
	0x8c, 0x85, 0x97, 0xba, 0x49, 0x3b, 0x4f, 0xb4, 0x96, 0xd6, 0x3e, 0x00, 0xd7, 0x1e, 0xc9, 0x33,
	0x73, 0x94, 0xcb, 0x41, 0xe3, 0x0d, 0xb8, 0xdd, 0x31, 0x25, 0x78, 0xc8, 0x63, 0x2f, 0xbd, 0xec,
	0xb7, 0x7b, 0x93, 0x61, 0x20, 0x95, 0x80, 0x27, 0x8d, 0x95, 0xfd, 0xf3, 0x78, 0x0f, 0x7c, 0x41,
	0x0d, 0x5e, 0xeb, 0xbd, 0xb3, 0x9f, 0x15, 0x04, 0xe7, 0x5a, 0x36, 0xfa, 0x66, 0x6c, 0x1e, 0xee,
	0xf6, 0x27, 0x00, 0x00, 0xff, 0xff, 0xec, 0xee, 0x03, 0x39, 0xd1, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserChannelServiceClient is the client API for UserChannelService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserChannelServiceClient interface {
	Get(ctx context.Context, in *GetUserChannelRequest, opts ...grpc.CallOption) (*GetUserChannelResponse, error)
}

type userChannelServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserChannelServiceClient(cc *grpc.ClientConn) UserChannelServiceClient {
	return &userChannelServiceClient{cc}
}

func (c *userChannelServiceClient) Get(ctx context.Context, in *GetUserChannelRequest, opts ...grpc.CallOption) (*GetUserChannelResponse, error) {
	out := new(GetUserChannelResponse)
	err := c.cc.Invoke(ctx, "/v1.UserChannelService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserChannelServiceServer is the server API for UserChannelService service.
type UserChannelServiceServer interface {
	Get(context.Context, *GetUserChannelRequest) (*GetUserChannelResponse, error)
}

func RegisterUserChannelServiceServer(s *grpc.Server, srv UserChannelServiceServer) {
	s.RegisterService(&_UserChannelService_serviceDesc, srv)
}

func _UserChannelService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserChannelServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.UserChannelService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserChannelServiceServer).Get(ctx, req.(*GetUserChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserChannelService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.UserChannelService",
	HandlerType: (*UserChannelServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _UserChannelService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "channel_service.proto",
}
